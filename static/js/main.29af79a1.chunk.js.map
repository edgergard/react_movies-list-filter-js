{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Header/Header.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Header","inputChange","htmlFor","type","id","placeholder","onChange","checkQuery","string","query","preparedString","toLowerCase","trim","preparedQuery","includes","App","useState","setQuery","visibleMovies","filter","getPreparedMovies","moviesFromServer","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"iuEAEaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAIhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,4BCvBKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,cCNfC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACpB,qBAAKb,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOc,QAAQ,eAAed,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEe,KAAK,OACLC,GAAG,eACHhB,UAAU,QACViB,YAAY,mBACZC,SAAUL,Y,OCRpB,SAASM,EAAWC,EAAQC,GAC1B,IAAMC,EAAiBF,EAAOG,cAAcC,OACtCC,EAAgBJ,EAAME,cAAcC,OAE1C,OAAOF,EAAeI,SAASD,GAc1B,IAAME,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KAEMC,EAdR,SAA2BrB,EAAQY,GACjC,OAAKA,EAIEZ,EAAOsB,QACZ,SAAAhC,GAAK,OAAIoB,EAAWpB,EAAMK,MAAOiB,IAC9BF,EAAWpB,EAAMM,YAAagB,MAL1BZ,EAYauB,CAAkBC,EAAkBZ,GAM1D,OACE,sBAAKrB,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAQa,YAPY,SAACqB,GACzBL,EAASK,EAAMC,OAAOC,UAQlB,cAAC,EAAD,CAAY3B,OAAQqB,OAGtB,qBAAK9B,UAAU,UAAf,mCCrCNqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.29af79a1.chunk.js","sourcesContent":["import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","export const Header = ({ inputChange }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          onChange={inputChange}\n        />\n      </div>\n    </div>\n  </div>\n\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { Header } from './components/Header';\nimport moviesFromServer from './api/movies.json';\n\nfunction checkQuery(string, query) {\n  const preparedString = string.toLowerCase().trim();\n  const preparedQuery = query.toLowerCase().trim();\n\n  return preparedString.includes(preparedQuery);\n}\n\nfunction getPreparedMovies(movies, query) {\n  if (!query) {\n    return movies;\n  }\n\n  return movies.filter(\n    movie => checkQuery(movie.title, query)\n    || checkQuery(movie.description, query),\n  );\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n\n  const visibleMovies = getPreparedMovies(moviesFromServer, query);\n\n  const handleInputChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <Header inputChange={handleInputChange} />\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}